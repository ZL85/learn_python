# 数字类型
# 整数
# 十进制整数。由0~9组成，进位规则是“逢十进一”。不能以0作为十进制数的开头（0除外）
# 八进制整数。由0~7组成，进位规则是“逢八进一”，并且以0o开头的数，如0o123（转换成十进制数为83）、−0o123（转换成十进制数为−83）
# 十六进制整数。由0~9，A~F组成，进位规则是“逢十六进一” ， 并且以0x/0X 开头的数， 如0x25 （ 转换成十进制数为37 ）
# 二进制整数。只有0和1两个基数，进位规则是“逢二进一”。如101（转换为十制数为5）、1010（转换为十进制为10）

# 浮点数
# 浮点数由整数部分和小数部分组成，主要用于处理包括小数的数，如1.414、0.5、−1.732、3.1415926535897等
# 浮点数也可以使用科学记数法表示，如2.7e2、−3.14e5和6.16e−2等
# 在使用浮点数进行计算时，可能会出现小数位数不确定的情况

# 复数
# Python中的复数与数学中的复数的形式完全一致，都是由实部和虚部组成，并且使用j或J表示虚部
# 当表示一个复数时，可以将其实部和虚部相加，例如，一个复数，实部为3.14，虚部为12.5j，则这个复数为3.14+12.5j
cn = 3.14+12.5j
print(type(cn))

# 字符串
# 字符串就是连续的字符序列，可以是计算机所能表示的一切字符的集合。
# 在Python中，字符串属于不可变序列，通常使用单引号“ ' ' ”、双引号“ " " ”或者三引号“ ''' ''' ”或“ """ """ ”括起来
str1 = 'a'
str2 = "b"
str3 = '''c'''
str4 = """
hello
world
"""
print(str1)
print(len(str1))
print(str2)
print(len(str2))
print(str3)
print(len(str3))
print(str4)
print(len(str4))

# 转义字符        说明
# \              续行符
# \n             续行符
# \0             空
# \t             水平制表符，用于横向跳到下一制表位
# \”             双引号
# \’             单引号
# \\             一个反斜杠
# \f             换页
# \0dd           八进制数，dd代表的字符，如\012代表换行
# \xhh           十六进制数，hh代表的字符，如\x0a代表换行

# 在字符串定界符引号的前面加上字母r（或R），那么该字符串将原样输出，其中的转义字符将不进行转义
print("hello\x0aworld!")
print(r"hello\x0aworld!")

# 布尔类型
# 在Python中，标识符True和False被解释为布尔值。另外，Python中的布尔值可以转化为数值，其中True表示1，而False表示0

# 数据类型转换
# 函数                    作用
# int(x)                  将x转换成整数类型
# float(x)                将x转换成浮点数类型
# complex(real[,imag])    创建一个复数
# str(x)                  将x转换为字符串
# repr(x)                 将x转换为表达式字符串
# eval(str)               计算在字符串中的有效Python表达式，并返回一个对象
# chr(x)                  将整数x转换成一个字符
# ord(x)                  将一个字符x转换成它对应的整数值
# hex(x)                  将一个整数x转换为一个十六进制的字符串
# oct(x)                  将一个整数x转换为一个八进制的字符串

# 在进行数据类型转换时，如果把一个非数字字符串转换为整型，将产生错误。
age = 23
print("your age is "+str(age))
gender = 'male'
print("your gender is "+gender)



